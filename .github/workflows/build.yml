name: Breaking Cues CI
on: [push]
permissions:
  contents: write
jobs:
  build:
    name: Build release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest] 
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: sudo apt-get install ninja-build libgtk-3-dev
    - run: flutter doctor
    - name: Install output dependencies
      working-directory: ./output
      run: flutter pub get
    - name: Install client dependencies
      working-directory: ./client
      run: flutter pub get
    - name: Install server dependencies
      working-directory: ./server
      run: dart pub get
    - name: Build output
      working-directory: ./output
      run: flutter build web --release
    - name: Build macOS client
      if: runner.os == 'macOS'
      working-directory: ./client
      run: flutter build macos --release
    - name: Build Linux client
      if: runner.os == 'Linux'
      working-directory: ./client
      env:
        CMAKE_MAKE_PROGRAM: make
      run: flutter build linux --release
    - name: Build Windows client
      if: runner.os == 'Windows'
      working-directory: ./client
      run: |
        # Work around https://github.com/flutter/flutter/issues/70269
        rm -r ./output
        cp -r ../output/build/web ./output
        flutter build windows --release
    - name: Make server build directory
      working-directory: ./server
      run: mkdir build
    - name: Build server (non-Windows)
      if: runner.os != 'Windows'
      working-directory: ./server
      run: dart compile exe -o ./build/server ./bin/server.dart
    - name: Build server (Windows)
      if: runner.os == 'Windows'
      working-directory: ./server
      run: dart compile exe -o ./build/server.exe ./bin/server.dart
    - name: Copy output web to server
      run: cp -r ./output/build/web ./server/build/output
    - name: Create release directory
      run: mkdir release
    - name: Get macOS Client
      if: runner.os == 'macOS'
      run: tar -czf ./release/${{ runner.os }}-client.tar.gz ./client/build/macos/Build/Products/Release/flutter_client.app
    - name: Get Linux Client
      if: runner.os == 'Linux'
      run: tar -czf ./release/${{ runner.os }}-client.tar.gz ./client/build/linux/x64/release/bundle
    - name: Get Windows Client
      if: runner.os == 'Windows'
      run: tar -czf ./release/${{ runner.os }}-client.tar.gz ./client/build/windows/x64/runner/Release
    - name: Get Server
      run: tar -czf ./release/${{ runner.os }}-server.tar.gz ./server/build
    - name: Upload Artefact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ runner.os }}
        path: ./release/*
    - name: Upload Assets to Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ./release/*
